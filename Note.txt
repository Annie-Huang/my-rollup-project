https://rollupjs.org/guide/en/#introduction
https://github.com/Annie-Huang/my-rollup-project

https://github.com/rollup/awesome       << Great list of all the plugins...

===============================================================

C:\react>mkdir my-rollup-project

C:\react\my-rollup-project>npm install rollup --global
C:\react\my-rollup-project>rollup

C:\react\my-rollup-project>mkdir src

C:\react\my-rollup-project>rollup src/main.js -f cjs
The -f option (short for --format) specifies what kind of bundle we're creating — in this case, CommonJS
(which will run in Node.js). Because we didn't specify an output file, it will be printed straight to stdout:

C:\react\my-rollup-project>rollup src/main.js -o bundle.js -f cjs
C:\react\my-rollup-project>del bundle.js
C:\react\my-rollup-project>rollup -c            <<< --config or -c

C:\react\my-rollup-project>rollup -c -o bundle-2.js
    You can override any of the options in the config file with the equivalent command line options:
    `-o` is equivalent to `--file` (formerly "output")

C:\react\my-rollup-project>npm init -y
C:\react\my-rollup-project>npm install rollup --save-dev
C:\react\my-rollup-project>del bundle.js
C:\react\my-rollup-project>npm run build
C:\react\my-rollup-project>npm install --save-dev rollup-plugin-json
C:\react\my-rollup-project>npm install --save-dev rollup-plugin-terser

============================================================================

Do this in gitbash:
Annie@DESKTOP-BH46C1T MINGW64 /c/react/my-rollup-project (master)
$ node
> var myBundle = require('./bundle.js');
undefined
> myBundle();
hello world!
undefined

=================================================
As you build more complex bundles, you'll often need more flexibility –
importing modules installed with NPM, compiling code with Babel, working with JSON files and so on.

=================================================
bundle.min.js:
var version = function () {
    "use strict";
    var n = "1.0.0";
    return function () {
        console.log("version " + n)
    }
}();
